{
  "openapi": "3.0.3",
  "info": {
    "title": "Bingle_Shop API",
    "description": "Documentation of Bingle_Shop ecommerce's endpoints and how to use them",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:1990"
    }
  ],
  "tags": [
    {
      "name": "Member",
      "description": "Member's endpoints",
      "externalDocs": {
        "description": "Find out more",
        "url": "editor.swagger.io"
      }
    },
    {
      "name": "Books",
      "description": "Book's endpoints",
      "externalDocs": {
        "description": "Find out more",
        "url": "editor.swagger.io"
      }
    },
    {
      "name": "BorrowHistory",
      "description": "Borrow History's endpoints",
      "externalDocs": {
        "description": "Find out more",
        "url": "editor.swagger.io"
      }
    }
  ],
  "paths": {
    "/borrow-book": {
      "post": {
        "tags": [
          "Member"
        ],
        "summary": "borrowing books",
        "description": "borrowing books",
        "operationId": "borrowing books",
        "requestBody": {
          "description": "giving name and the name of the books",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestBodyBorrow"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/requestBodyBorrow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBorrow"
                }
              }
            }
          },
          "400": {
            "description": "Input Email & Password || Invalid email format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "success": false,
                  "message": "Member code, book code, or borrow history id not provided!",
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "Email Already Exist!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "success": false,
                  "message": "member or books not found!",
                  "data": null
                }
              }
            }
          }
        }
      }
    },
    "/return-book": {
      "post": {
        "tags": [
          "Member"
        ],
        "summary": "returning book",
        "description": "returning borrowed book",
        "operationId": "increasing decreasing stock",
        "requestBody": {
          "description": "return book",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestBodyReturn"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/requestBodyReturn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "returned book successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "message": "Joh successfully returned the book`, bookCode",
                  "data": [
                    "TW-12"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "message": "Member code, book code, or borrow history id not provided!",
                  "data": null
                }
              }
            }
          },
          "404": {
            "description": "memberCode or bookCode or id borrowHistory not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "message": "Member with code 'M002' not found! || Book with code 'NAR-2' not found! || history with id 2 not found!",
                  "data": null
                }
              }
            }
          }
        }
      }
    },
    "/all-member": {
      "get": {
        "tags": [
          "Member"
        ],
        "summary": "Get user by id",
        "description": "Find User By id",
        "operationId": "getOne",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token Not Valid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "success": true,
                  "message": "successfully get all data members.",
                  "data": [
                    {
                      "code": "M001",
                      "name": "Angga",
                      "penalty": null,
                      "penaltyEndDate": null,
                      "borrowedBooks": 0,
                      "borrowedDate": null
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/show-all-book": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "get all books data",
        "description": "get all books data",
        "operationId": "get all books data",
        "responses": {
          "200": {
            "description": "successfully get all books data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                },
                "example": {
                  "success": true,
                  "message": "successfully get all data members.",
                  "data": [
                    {
                      "code": "JK-45",
                      "title": "Harry Potter",
                      "author": "J.K Rowling",
                      "stock": 1
                    },
                    {
                      "code": "JK-44",
                      "title": "Harlan",
                      "author": "Raden",
                      "stock": 0
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/show-available-books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get Item",
        "description": "Show all items",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "Get All Data Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Response"
                  }
                },
                "example": {
                  "success": true,
                  "message": "successfully get all available books.",
                  "data": [
                    {
                      "code": "JK-45",
                      "title": "Harry Potter",
                      "author": "J.K Rowling",
                      "stock": 1
                    },
                    {
                      "code": "JK-44",
                      "title": "Harlan",
                      "author": "Raden",
                      "stock": 1
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/borrow-history": {
      "get": {
        "tags": [
          "BorrowHistory"
        ],
        "summary": "get numbers of books being borrowed by each memberr",
        "description": "borrow books history",
        "responses": {
          "200": {
            "description": "Get All Data Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Response"
                  }
                },
                "example": {
                  "success": true,
                  "message": "Successfully retrieved books count by member.",
                  "data": [
                    {
                      "memberCode": "M002",
                      "booksBorrowed": "1"
                    },
                    {
                      "memberCode": "M001",
                      "booksBorrowed": "4"
                    },
                    {
                      "memberCode": "M003",
                      "booksBorrowed": "2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "requestBodyBorrow": {
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "example": "M003"
          },
          "bookCode": {
            "type": "string",
            "example": "JK-1"
          }
        }
      },
      "responseBorrow": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "format": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Harry successfully borrowed 2 book which is ['JK-1', 'NAR-2']"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "example": null
            }
          }
        }
      },
      "requestBodyReturn": {
        "type": "object",
        "properties": {
          "memberCode": {
            "type": "string",
            "example": "M003"
          },
          "bookCode": {
            "type": "string",
            "example": "JK-1"
          },
          "id": {
            "type": "integer",
            "example": 14
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "status_code": {
            "type": "integer"
          },
          "data": {
            "type": "object"
          }
        }
      }
    }
  }
}